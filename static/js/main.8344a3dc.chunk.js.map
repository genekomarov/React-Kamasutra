{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","utils/object-helper.js","redux/users-reducer.js","assets/images/preloader.gif","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","components/Content/News/News.jsx","components/Content/Music/Music.jsx","components/Content/Settings/Settings.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/common/FormsControls/FormControls.module.css","components/Header/Header.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/common/Preloader/Preloader.jsx","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getUserProfile","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","lookingForAJob","lookingForAJobDescription","fullName","contacts","aboutMe","authAPI","authCheck","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","initialState","dialogs","id","name","messages","message","addMessageTextCreator","type","dialogsReducer","state","action","text","newMessageText","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","users","totalUsersCount","isFetching","isFollowing","followSuccess","unfollowSuccess","setCurrentPage","toggleFetching","toggleFollowing","requestUsers","dispatch","a","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","bind","usersReducer","followed","filter","item","module","exports","Navbar","className","s","nav","to","activeClassName","active","News","Music","Settings","Header","props","header","errorMessage","error","logo","src","alt","auth","isAuth","onClick","setAuthUserData","payload","setCaptchaUrl","url","authReducer","HeaderContainer","this","React","Component","mapDispatchToProps","connect","app","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","validate","required","component","Input","placeholder","formSummaryError","stopSubmit","_error","length","initialized","showError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","fallback","DialogsContainer","lazy","UsersContainer","ProfileContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","showErrorForSomeSeconds","initializeApp","addEventListener","removeEventListener","path","render","withSuspense","exact","Preloader","promise","Promise","all","setTimeout","AppContainer","withRouter","SocialNetworkApp","Boolean","location","hostname","match","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","cloneElement","Object","assign","Textarea","value","undefined","maxLength","style","textAlign","preloader","ADD_POST","posts","likes","profile","updateStatusError","isTestError","addPostActionCreator","setStatus","saveProfileSuccess","setUpdateStatusError","userProfile","photos","setEditMode","newPostText"],"mappings":"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","file":"static/js/main.8344a3dc.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"49b8c148-8504-4177-871f-fdd46ee0d97e\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage = 1, pageSize = 5) =>\r\n        instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data),\r\n\r\n    follow: (userId) =>\r\n        instance.post(`follow/${userId}`)\r\n            .then(response => response.data),\r\n\r\n    unfollow: (userId) =>\r\n        instance.delete(`follow/${userId}`)\r\n            .then(response => response.data),\r\n\r\n    getUserProfile: (userId) => {\r\n        console.warn('Obsolete method. Please use profileAPI.getProfile');\r\n        return profileAPI.getProfile(userId);\r\n        /*instance.get(`profile/` + userId)\r\n            .then(response => response.data)*/\r\n    }\r\n\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile: (userId) =>\r\n        instance.get(`profile/` + userId)\r\n            .then(response => response.data),\r\n\r\n    getStatus: (userId) =>\r\n        instance.get(`profile/status/` + userId)\r\n            .then(response => response.data),\r\n\r\n    updateStatus: (status) =>\r\n        instance.put(`profile/status/`, {status})\r\n            .then(response => response.data),\r\n\r\n    savePhoto: (file) => {\r\n        let formData = new FormData();\r\n        formData.append('image', file);\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n\r\n    saveProfile: (\r\n        {\r\n            userId,\r\n            lookingForAJob = false,\r\n            lookingForAJobDescription = \"\",\r\n            fullName,\r\n            contacts = {},\r\n            aboutMe = \"\"\r\n        }) =>\r\n        instance.put('profile/', {userId, lookingForAJob, lookingForAJobDescription, fullName, contacts, aboutMe})\r\n            .then(response => response.data)\r\n\r\n};\r\n\r\nexport const authAPI = {\r\n\r\n    authCheck: () => instance.get(`auth/me/`)\r\n        .then(response => response.data),\r\n\r\n    login: (email, password, rememberMe = false, captcha) => instance.post('auth/login/', {email, password, rememberMe, captcha})\r\n        .then(response => response.data ),\r\n\r\n    logout: () => instance.delete('auth/login/')\r\n        .then(response => response.data ),\r\n};\r\n\r\nexport const securityAPI = {\r\n\r\n    getCaptcha: () => instance.get('security/get-captcha-url/')\r\n        .then(response => response.data)\r\n\r\n};","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: '1', name: 'Ivan'},\r\n        {id: '2', name: 'Vitaliy'},\r\n        {id: '3', name: 'Andrey'},\r\n        {id: '4', name: 'Anton'},\r\n        {id: '5', name: 'Sergey'},\r\n        {id: '6', name: 'Ilya'}\r\n    ],\r\n    messages: [\r\n        {id: '1', message: 'Hello!'},\r\n        {id: '2', message: 'How are you?'},\r\n        {id: '3', message: 'I\\'m fine!'}\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let text = action.message;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 2, message: text}],\r\n                newMessageText: ''\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const addMessageTextCreator = (message) =>\r\n    ({\r\n        type: ADD_MESSAGE,\r\n        message\r\n    });\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => items.map( u => {\r\n    if (u[objPropName] === itemId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n});","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helper\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'users/SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_FETCHING = 'users/TOGGLE-FETCHING';\r\nconst TOGGLE_FOLLOWING = 'users/TOGGLE_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowing: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n        case SET_USERS:\r\n            return { ...state, users: action.users };\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.totalUsersCount};\r\n        case TOGGLE_FETCHING:\r\n            return { ...state, isFetching: action.isFetching};\r\n        case TOGGLE_FOLLOWING:\r\n            return{\r\n                ...state,\r\n                isFollowing: action.isFollowing\r\n                    ? [...state.isFollowing , action.userId]\r\n                    : state.isFollowing.filter( (item) => item !== action.userId )\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching});\r\nexport const toggleFollowing = (isFollowing, userId) => ({type: TOGGLE_FOLLOWING, isFollowing, userId});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n\r\n    let data = await usersAPI.getUsers(currentPage, pageSize);\r\n\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(toggleFetching(false));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowing(true, userId));\r\n\r\n    let data = await apiMethod(userId);\r\n\r\n    if (data.resultCode === 0) dispatch(actionCreator(userId));\r\n    dispatch(toggleFollowing(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.9134df9c.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__MS1R0\",\"active\":\"Navbar_active__1jeym\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li><NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink></li>\r\n                <li><NavLink to=\"/dialogs\" activeClassName={s.active}>Massages</NavLink></li>\r\n                <li><NavLink to=\"/news\" activeClassName={s.active}>News</NavLink></li>\r\n                <li><NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink></li>\r\n                <li>&nbsp;</li>\r\n                <li><NavLink to=\"/users\" activeClassName={s.active}>Find users</NavLink></li>\r\n                <li>&nbsp;</li>\r\n                <li><NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            {\r\n                props.errorMessage && <div className={s.error}>Global Error</div>\r\n            }\r\n\r\n\r\n            <img className={s.logo} src=\"https://s1.logaster.com/static/v3/img/products/logo.png\" alt=\"\"/>\r\n            <div className={s.auth}>\r\n                { props.isAuth\r\n                    ? (\r\n                        <div>\r\n                            <div>{props.login}</div>\r\n                            <button onClick={props.logout}>Log out</button>\r\n                        </div>\r\n                    )\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\r\nconst SET_CAPTCHA_URL = 'auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    id: 7252,  //идентификатор пользователя\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false, //Статус авторизации\r\n    captcha: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captcha: action.url\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) =>\r\n    ({\r\n        type: SET_USER_DATA,\r\n        payload: {id, email, login, isAuth}\r\n    });\r\n\r\nexport const setCaptchaUrl = (url) =>\r\n    ({\r\n        type: SET_CAPTCHA_URL,\r\n        url\r\n    });\r\n\r\nexport const authCheck = () => async (dispatch) => {\r\n    let data = await authAPI.authCheck();\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, email, login} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(authCheck());\r\n        setCaptchaUrl(null);\r\n    } else if (data.resultCode === 10) {\r\n        dispatch(getCaptcha());\r\n    } else {\r\n        dispatch(stopSubmit('login', {_error: data.messages.length > 0 ? data.messages[0] : 'Some error'}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout();\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(authCheck());\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    let data = await securityAPI.getCaptcha();\r\n    dispatch(setCaptchaUrl(data.url));\r\n};\r\n\r\n\r\n\r\nexport default authReducer;","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header {...this.props} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        errorMessage: state.app.errorMessage\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = { //as Object\r\n    logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {getCaptcha, login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './../common/FormsControls/FormControls.module.css';\r\n\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captcha, getCaptcha}) => {\r\n\r\n    const onCaptchaClick = () => {\r\n        getCaptcha();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div><Field validate={[required]} component={Input} placeholder={'E-mail'} name={'email'}/></div>\r\n            <div><Field validate={[required]} component={Input} placeholder={'password'} name={'password'}/></div>\r\n            <div><Field component={'input'} type={'checkbox'} name={'rememberMe'}/>remember me</div>\r\n\r\n            { captcha && <div><img onClick={onCaptchaClick} src={captcha} alt=\"\"/></div>}\r\n            { captcha && <div><Field validate={[required]} component={Input} placeholder={'symbols'} name={'captcha'}/></div>}\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n            {error && <div className={s.formSummaryError}>{error}</div>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = ({login, isAuth, captcha, getCaptcha}) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm\r\n                onSubmit={onSubmit}\r\n                captcha={captcha}\r\n                getCaptcha={getCaptcha}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captcha: state.auth.captcha\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {login, getCaptcha})(Login);","import {authCheck} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\nconst SHOW_ERROR = 'app/SHOW_ERROR';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    errorMessage: null\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        case SHOW_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () =>\r\n    ({\r\n        type: INITIALIZED_SUCCESS\r\n    });\r\n\r\nexport const showError = (error) =>\r\n    ({\r\n        type: SHOW_ERROR,\r\n        error\r\n    });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(authCheck());\r\n\r\n    Promise.all([promise])\r\n        .then( () => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\n\r\nexport const showErrorForSomeSeconds = (message) => (dispatch) => {\r\n    dispatch(showError(message));\r\n    setTimeout(() => {dispatch(showError(null));},5000);\r\n};\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n/*let store = createStore(reducers, applyMiddleware(thunkMiddleware));*/\r\n\r\nexport default store;","import React from \"react\";\r\nimport {Suspense} from \"react\";\r\n\r\nexport default (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<div>Загрузка...</div>}>\r\n                <Component/>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/Content/News/News\";\nimport Music from \"./components/Content/Music/Music\";\nimport Settings from \"./components/Content/Settings/Settings\";\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {initializeApp, showErrorForSomeSeconds} from \"./redux/app-reducer\";\nimport store from \"./redux/redux-store\";\nimport withSuspense from \"./hoc/withSuspense\";\n\nconst DialogsContainer = React.lazy( () => import(\"./components/Content/Dialogs/DialogsContainer\") );\nconst UsersContainer = React.lazy( () => import(\"./components/Content/Users/UsersContainer\") );\nconst ProfileContainer = React.lazy( () => import(\"./components/Content/Profile/ProfileContainer\") );\n\n\nclass App extends Component {\n\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\n        alert('Some error occured');\n        this.props.showErrorForSomeSeconds('Some error occured');\n    };\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        return !this.props.initialized\n            ? <Preloader />\n            : (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\n                        <Route path='/news' render={() => <News/>}/>\n                        <Route path='/music' render={() => <Music/>}/>\n                        <Route path='/users' render={withSuspense(UsersContainer)}/>\n                        <Route path='/settings' render={() => <Settings/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route exact path='/' render={() => <Redirect to={'/profile'}/>}/>\n                        <Route path='*' render={() => <div>404 not found</div>}/>\n                    </Switch>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst mapDispatchToProps = {\n    initializeApp,\n    showErrorForSomeSeconds\n};\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n)(App);\n\nconst SocialNetworkApp = (props) => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    )\n};\n\nexport default SocialNetworkApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SocialNetworkApp from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store'\n\nlet rendererEntireTree = (state) => {\n\n    ReactDOM.render(\n        <SocialNetworkApp />,\n        document.getElementById('root')\n    );\n};\n\nrendererEntireTree(store.getState());\n\n/*store.subscribe( () => {\n    let state = store.getState();\n    rendererEntireTree(state)\n});\n\nwindow.state = store.getState;*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2bJJI\",\"error\":\"FormControls_error__3pQIh\",\"formSummaryError\":\"FormControls_formSummaryError__35mHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__K4Ofp\",\"logo\":\"Header_logo__1E7Am\",\"auth\":\"Header_auth__2LdWa\",\"error\":\"Header_error__1cZOE\"};","import React from \"react\";\r\nimport s from './FormControls.module.css'\r\n\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children, ...props}) => {\r\n\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={`${s.formControl} ${hasError && s.error}`}>\r\n\r\n            {React.cloneElement(\r\n                children,\r\n                Object.assign(props, input)\r\n            )}\r\n\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    return <FormControl {...props}><textarea /></FormControl>\r\n};\r\nexport const Input = (props) => {\r\n    return <FormControl {...props}><input /></FormControl>\r\n};\r\n","export const required = value => (\r\n    value ? undefined : 'Field is required'\r\n);\r\n\r\nexport const maxLength = (length) => (value) => (\r\n    value.length > length\r\n        ? `length more than ${length} characters`\r\n        : undefined\r\n);","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div style={{\r\n                textAlign: 'center'\r\n            }}>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET-USER-PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\r\nconst SAVE_PROFILE_SUCCESS = 'profile/SAVE_PROFILE_SUCCESS';\r\nconst SET_UPDATE_STATUS_ERROR = 'profile/SET_UPDATE_STATUS_ERROR'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 0, post: 'Hello! How are you?', likes: 12},\r\n        {id: 1, post: 'it\\'s my first post.', likes: 0}\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n    updateStatusError: null,\r\n    isTestError: true\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let text = action.post;\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 2, post: text, likes: 0}],\r\n                newPostText: ''\r\n            };\r\n        case SET_USER_PROFILE:\r\n            return { ...state, profile: action.userProfile};\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    photos: action.photos\r\n                }\r\n            };\r\n        case SAVE_PROFILE_SUCCESS:\r\n            return  {\r\n                ...state,\r\n                profile:  {\r\n                    ...state.profile,\r\n                    ...action.profile\r\n                }\r\n            };\r\n        case SET_UPDATE_STATUS_ERROR:\r\n            return {\r\n                ...state,\r\n                updateStatusError: action.error,\r\n                isTestError: false\r\n            };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (post) =>\r\n    ({\r\n        type: ADD_POST,\r\n        post\r\n    });\r\n\r\nexport const setUserProfile = (userProfile) =>\r\n    ({\r\n        type: SET_USER_PROFILE,\r\n        userProfile\r\n    });\r\n\r\nexport const setStatus = (status) =>\r\n    ({\r\n        type: SET_STATUS,\r\n        status\r\n    });\r\n\r\nexport const savePhotoSuccess = (photos) => ({\r\n    type: SAVE_PHOTO_SUCCESS,\r\n    photos\r\n});\r\n\r\nexport const saveProfileSuccess = (profile) => ({\r\n    type: SAVE_PROFILE_SUCCESS,\r\n    profile\r\n});\r\n\r\nexport const setUpdateStatusError = (error) => ({\r\n    type: SET_UPDATE_STATUS_ERROR,\r\n    error\r\n});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getUserProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response));\r\n};\r\n\r\nexport const updateStatus = (status, isTestError) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if (response.resultCode === 0)\r\n            dispatch(setStatus(status));\r\n\r\n        if (isTestError) throw 'TEST update status error';\r\n\r\n    } catch (e) {\r\n        dispatch(setUpdateStatusError(e));\r\n        setTimeout(() => dispatch(setUpdateStatusError(null)), 3000)\r\n    }\r\n\r\n};\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if (response.resultCode === 0)\r\n        dispatch(savePhotoSuccess(response.data.photos))\r\n};\r\n\r\nexport const saveProfile = (profile, setEditMode) => async (dispatch) => {\r\n    let data = await profileAPI.saveProfile(profile);\r\n    if (data.resultCode === 0) {\r\n        dispatch(saveProfileSuccess(profile));\r\n        setEditMode(false);\r\n    } else\r\n        dispatch(stopSubmit('profileInfo', {_error: data.messages.length > 0 ? data.messages[0] : 'Some error'}));\r\n\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}