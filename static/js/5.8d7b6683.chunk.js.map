{"version":3,"sources":["hoc/withAuthRedirect.js","components/Content/Dialogs/Dialogs.module.css","components/Content/Dialogs/NewMessage/NewMessage.module.css","components/Content/Dialogs/Dialog/Dialog.jsx","components/Content/Dialogs/Message/Message.jsx","components/Content/Dialogs/NewMessage/NewMessage.jsx","components/Content/Dialogs/NewMessage/NewMessageContainer.jsx","components/Content/Dialogs/Dialogs.jsx","components/Content/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialog","path","id","className","s","dialog","activeClassName","activeDialog","name","Message","message","maxLength30","maxLength","DialogsNewMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","wrapper","Field","validate","required","component","Textarea","submit","NewMessage","formData","addMessage","NewMessageContainer","newMessageText","dialogsPage","dispatch","addMessageTextCreator","Dialogs","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsWrapper","compose"],"mappings":"8NAIIA,EAA0B,SAACC,GAAD,MAAY,CACtCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAOtC,OAAOM,YAAQX,EAARW,CAAiCL,K,oBCf5CM,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,SAAW,0BAA0B,OAAS,wBAAwB,QAAU,yBAAyB,aAAe,gC,oBCA9ND,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,6B,8FCelDC,EAZA,SAACN,GAEZ,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASV,GAAIM,EAAMK,gBAAiBF,IAAEG,cACjCb,EAAMc,QCDRC,EANC,SAACf,GACb,OACI,yBAAKS,UAAWC,IAAEM,SAAUhB,EAAMgB,U,6DCCpCC,EAAcC,YAAU,IAyBxBC,EAA6BC,YAAU,CAACC,KAAM,qBAAjBD,EAXL,SAACpB,GAC3B,OACI,0BAAMsB,SAAUtB,EAAMuB,aAAcd,UAAWC,IAAEc,SAC7C,kBAACC,EAAA,EAAD,CACIC,SAAU,CAACC,IAAUV,GACrBW,UAAWC,IAAUf,KAAM,YAC/B,4BAAQL,UAAWC,IAAEoB,QAArB,cAOGC,EAzBI,SAAC/B,GAOhB,OACI,kBAACmB,EAAD,CAA4BG,SALf,SAACU,GACdhC,EAAMiC,WAAWD,EAAShB,aCQnBkB,EAFa/B,aAbN,SAACV,GACnB,MAAO,CACH0C,eAAgB1C,EAAM2C,YAAYD,mBAIjB,SAACE,GACtB,MAAO,CACHJ,WAAY,SAACjB,GAAD,OAAaqB,EAAUC,YAAsBtB,QAKrCb,CAA6C4B,GCe1DQ,EA3BC,SAACvC,GAEb,IAAIwC,EACAxC,EAAMyC,QACDC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQC,IAAKD,EAAEnC,GAAIM,KAAM6B,EAAE7B,KAAMN,GAAImC,EAAEnC,QAErDqC,EACA7C,EAAM8C,SACDJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAEvC,GAAIQ,QAAS+B,EAAE/B,aAEjD,OACI,uCAEI,yBAAKP,UAAWC,IAAEsC,gBACd,yBAAKvC,UAAWC,IAAE+B,SACbD,GAEL,yBAAK/B,UAAWC,IAAEoC,UACbD,EACD,kBAAC,EAAD,U,gBCLLI,sBACX9C,aAhBkB,SAACV,GACnB,MAAO,CACHgD,QAAShD,EAAM2C,YAAYK,QAC3BK,SAAUrD,EAAM2C,YAAYU,aAKX,SAACT,GACtB,MAAO,MAQPzC,IAFWqD,CAGbV","file":"static/js/5.8d7b6683.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3MFgB\",\"dialogs\":\"Dialogs_dialogs__1gSTg\",\"messages\":\"Dialogs_messages__JSuy_\",\"dialog\":\"Dialogs_dialog__2-xCc\",\"message\":\"Dialogs_message__10Wc2\",\"activeDialog\":\"Dialogs_activeDialog__1jbKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewMessage_wrapper__3TRY7\",\"submit\":\"NewMessage_submit__ZxJmg\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\"; //CSS import\r\n\r\nconst Dialog = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.activeDialog}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport s from './../Dialogs.module.css' //CSS import\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './NewMessage.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../utils/validators/validators\";\r\nimport {Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength30 = maxLength(30);\r\n\r\nconst NewMessage = (props) => {\r\n\r\n\r\n    let addMessage = (formData) => {\r\n        props.addMessage(formData.message);\r\n    };\r\n\r\n    return (\r\n        <DialogsNewMessageFormRedux onSubmit={addMessage}/>\r\n    );\r\n};\r\n\r\nconst DialogsNewMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={s.wrapper}>\r\n            <Field\r\n                validate={[required, maxLength30]}\r\n                component={Textarea} name={'message'} />\r\n            <button className={s.submit}>Submit</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst DialogsNewMessageFormRedux = reduxForm({form: 'dialogsNewMessage'})(DialogsNewMessageForm);\r\n\r\nexport default NewMessage;","import {addMessageTextCreator, /*changeNewMessageTextCreator*/} from \"../../../../redux/dialogs-reducer\";\r\nimport NewMessage from \"./NewMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => dispatch (addMessageTextCreator(message)),\r\n        /*changeNewMessageText: (text) => dispatch(changeNewMessageTextCreator(text))*/\r\n    }\r\n}\r\n\r\nconst NewMessageContainer = connect(mapStateToProps, mapDispatchToProps)(NewMessage);\r\n\r\nexport default NewMessageContainer;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport NewMessageContainer from \"./NewMessage/NewMessageContainer\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements =\r\n        props.dialogs\r\n            .map(d => <Dialog key={d.id} name={d.name} id={d.id}/>);\r\n\r\n    let messagesElements =\r\n        props.messages\r\n            .map(m => <Message key={m.id} message={m.message}/>);\r\n\r\n    return (\r\n        <div>\r\n            Dialogs\r\n            <div className={s.dialogsWrapper}>\r\n                <div className={s.dialogs}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {messagesElements}\r\n                    <NewMessageContainer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages\r\n\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}