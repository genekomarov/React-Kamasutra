{"version":3,"sources":["hoc/withAuthRedirect.js","assets/images/user.webp","components/Content/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/Content/Users/User/User.module.css","components/common/Paginator/Paginator.jsx","components/Content/Users/User/User.jsx","components/Content/Users/Users.jsx","redux/users-selectors.js","components/Content/Users/UsersContainer.jsx"],"names":["mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","pagesCount","Math","ceil","pages","i","push","key","className","s","selectedPage","onClick","User","id","photos","name","status","followed","isFollowing","follow","unfollow","user","left","src","small","userPhoto","alt","avatar","disabled","some","item","followBtn","right","firstName","location","Users","users","isFetching","Preloader","map","u","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsFollowing","UsersContainer","pageNumber","setCurrentPage","requestUsers","toggleFollowing","mapDispatchToProps","compose"],"mappings":"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","file":"static/js/4.82d30d99.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent);\r\n};","module.exports = __webpack_public_path__ + \"static/media/user.0ec44ea3.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__3F8EN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__356mH\",\"selectedPage\":\"Paginator_selectedPage__3BebR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"User_avatar__2IPkN\",\"followBtn\":\"User_followBtn__1GsWg\",\"user\":\"User_user__8qnxk\",\"right\":\"User_right__3x87Y\",\"firstName\":\"User_firstName__2db3i\",\"location\":\"User_location__6nQtS\",\"status\":\"User_status__39JbP\"};","import React from 'react';\r\nimport s from \"./Paginator.module.css\";\r\n//import s from '   '\r\n\r\nconst Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = (() => currentPage-3 > 0 ? currentPage-3 : 1)();\r\n         i <= (() => currentPage+3 <= pagesCount ? currentPage+3 : pagesCount)();\r\n         i++) {\r\n        pages.push(\r\n            <span\r\n                key={i}\r\n                className={i === currentPage && s.selectedPage}\r\n                onClick={ () => {onPageChanged(i)}}> {i} </span>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.pages}>\r\n            {pages}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../../assets/images/user.webp\";\r\n\r\nconst User = ({id, photos, name, status, followed, isFollowing, follow, unfollow}) => {\r\n    return (\r\n        <div key={id} className={s.user}>\r\n            <div className={s.left}>\r\n\r\n                <NavLink to={'/profile/' + id}>\r\n                    <img src={photos.small != null\r\n                        ? photos.small\r\n                        : userPhoto\r\n                    }\r\n                         alt=\"\" className={s.avatar}\r\n                    />\r\n                </NavLink>\r\n\r\n                {followed\r\n                    ? (\r\n                        <button disabled={isFollowing.some( (item) => item === id )} className={s.followBtn} onClick={() => {\r\n\r\n                            unfollow(id);\r\n\r\n                        }}>\r\n                            Follow\r\n                        </button>\r\n                    )\r\n                    : (\r\n                        <button disabled={isFollowing.some((item) => item === id )} className={s.followBtn} onClick={() => {\r\n\r\n                            follow(id);\r\n\r\n                        }}>\r\n                            Unfollow\r\n                        </button>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className={s.right}>\r\n                <div className={s.firstName}>{name}</div>\r\n                <div className={s.location}>{'props.location.country'}<br/>{'props.location.city'}</div>\r\n                <div className={s.status}>{status}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport Paginator from \"../../common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\n\r\nlet Users = ({users, isFollowing, unfollow, follow, isFetching,\r\n                 totalUsersCount, pageSize, currentPage, onPageChanged, ...props}) => {\r\n\r\n    let usersElements = () => {\r\n        return users.map(u => (\r\n            <User\r\n                id={u.id}\r\n                photos={u.photos}\r\n                name={u.name}\r\n                status={u.status}\r\n                followed={u.followed}\r\n                isFollowing={isFollowing}\r\n                follow={follow}\r\n                unfollow={unfollow}\r\n            />\r\n            /*{/!*<div key={u.id} className={s.user}>\r\n                <div className={s.left}>\r\n\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null\r\n                            ? u.photos.small\r\n                            : userPhoto\r\n                        }\r\n                             alt=\"\" className={s.avatar}\r\n                        />\r\n                    </NavLink>\r\n\r\n                    {u.followed\r\n                        ? (\r\n                            <button disabled={isFollowing.some( (item) => item === u.id )} className={s.followBtn} onClick={() => {\r\n\r\n                                unfollow(u.id);\r\n\r\n                            }}>\r\n                                Follow\r\n                            </button>\r\n                        )\r\n                        : (\r\n                            <button disabled={isFollowing.some((item) => item === u.id )} className={s.followBtn} onClick={() => {\r\n\r\n                                follow(u.id);\r\n\r\n                            }}>\r\n                                Unfollow\r\n                            </button>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className={s.right}>\r\n                    <div className={s.firstName}>{u.name}</div>\r\n                    <div className={s.location}>{'u.location.country'}<br/>{'u.location.city'}</div>\r\n                    <div className={s.status}>{u.status}</div>\r\n                </div>\r\n            </div>*!/}*/\r\n        ));\r\n    };\r\n\r\n/*    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = (() => props.currentPage-3 > 0 ? props.currentPage-3 : 1)();\r\n         i <= (() => props.currentPage+3 <= pagesCount ? props.currentPage+3 : pagesCount)();\r\n         i++) {\r\n        pages.push(\r\n            <span\r\n                key={i}\r\n                className={i === props.currentPage && s.selectedPage}\r\n                onClick={ () => {props.onPageChanged(i)}}> {i} </span>\r\n        )\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <Paginator\r\n                totalUsersCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n            />\r\n            {/*<div className={s.pages}>\r\n                {pages}\r\n            </div>*/}\r\n            <div>\r\n                {isFetching && <Preloader />}\r\n            </div>\r\n            <div className={s.users}>\r\n                { !isFetching && usersElements()}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\n\r\nexport const getIsFollowing = (state) => {\r\n    return state.usersPage.isFollowing\r\n};","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowing, requestUsers\r\n} from \"../../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getIsFollowing,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Users\r\n                users={this.props.users}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                isFetching={this.props.isFetching}\r\n\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                onPageChanged={this.onPageChanged}\r\n                isFollowing={this.props.isFollowing}\r\n\r\n                toggleFollowing={this.props.toggleFollowing}\r\n            />\r\n            )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowing: getIsFollowing(state)\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowing,\r\n    requestUsers\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(UsersContainer);\r\n"],"sourceRoot":""}